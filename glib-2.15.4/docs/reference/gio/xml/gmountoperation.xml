<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GMountOperation">
<refmeta>
<refentrytitle role="top_of_page">GMountOperation</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GMountOperation</refname>
<refpurpose>Authentication methods for mountable locations</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gio.h&gt;


enum                <link linkend="GAskPasswordFlags">GAskPasswordFlags</link>;
enum                <link linkend="GPasswordSave">GPasswordSave</link>;
                    <link linkend="GMountOperation-struct">GMountOperation</link>;
enum                <link linkend="GMountOperationResult">GMountOperationResult</link>;
<link linkend="GMountOperation">GMountOperation</link>*    <link linkend="g-mount-operation-new">g_mount_operation_new</link>               (void);
const <link linkend="char">char</link>*         <link linkend="g-mount-operation-get-username">g_mount_operation_get_username</link>      (<link linkend="GMountOperation">GMountOperation</link> *op);
<link linkend="void">void</link>                <link linkend="g-mount-operation-set-username">g_mount_operation_set_username</link>      (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         const <link linkend="char">char</link> *username);
const <link linkend="char">char</link>*         <link linkend="g-mount-operation-get-password">g_mount_operation_get_password</link>      (<link linkend="GMountOperation">GMountOperation</link> *op);
<link linkend="void">void</link>                <link linkend="g-mount-operation-set-password">g_mount_operation_set_password</link>      (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         const <link linkend="char">char</link> *password);
<link linkend="gboolean">gboolean</link>            <link linkend="g-mount-operation-get-anonymous">g_mount_operation_get_anonymous</link>     (<link linkend="GMountOperation">GMountOperation</link> *op);
<link linkend="void">void</link>                <link linkend="g-mount-operation-set-anonymous">g_mount_operation_set_anonymous</link>     (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="gboolean">gboolean</link> anonymous);
const <link linkend="char">char</link>*         <link linkend="g-mount-operation-get-domain">g_mount_operation_get_domain</link>        (<link linkend="GMountOperation">GMountOperation</link> *op);
<link linkend="void">void</link>                <link linkend="g-mount-operation-set-domain">g_mount_operation_set_domain</link>        (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         const <link linkend="char">char</link> *domain);
<link linkend="GPasswordSave">GPasswordSave</link>       <link linkend="g-mount-operation-get-password-save">g_mount_operation_get_password_save</link> (<link linkend="GMountOperation">GMountOperation</link> *op);
<link linkend="void">void</link>                <link linkend="g-mount-operation-set-password-save">g_mount_operation_set_password_save</link> (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="GPasswordSave">GPasswordSave</link> save);
<link linkend="int">int</link>                 <link linkend="g-mount-operation-get-choice">g_mount_operation_get_choice</link>        (<link linkend="GMountOperation">GMountOperation</link> *op);
<link linkend="void">void</link>                <link linkend="g-mount-operation-set-choice">g_mount_operation_set_choice</link>        (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="int">int</link> choice);
<link linkend="void">void</link>                <link linkend="g-mount-operation-reply">g_mount_operation_reply</link>             (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="GMountOperationResult">GMountOperationResult</link> result);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GMountOperation
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GMountOperation--anonymous">anonymous</link>&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GMountOperation--choice">choice</link>&quot;                   <link linkend="gint">gint</link>                  : Read / Write
  &quot;<link linkend="GMountOperation--domain">domain</link>&quot;                   <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="GMountOperation--password">password</link>&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write
  &quot;<link linkend="GMountOperation--password-save">password-save</link>&quot;            <link linkend="GPasswordSave">GPasswordSave</link>         : Read / Write
  &quot;<link linkend="GMountOperation--username">username</link>&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  &quot;<link linkend="GMountOperation-ask-password">ask-password</link>&quot;                                   : Run Last
  &quot;<link linkend="GMountOperation-ask-question">ask-question</link>&quot;                                   : Run Last
  &quot;<link linkend="GMountOperation-reply">reply</link>&quot;                                          : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GMountOperation"><type>GMountOperation</type></link> provides a mechanism for authenticating mountable 
operations, such as loop mounting files, hard drive partitions or 
server locations. 
</para>
<para>
Mounting operations are handed a <link linkend="GMountOperation"><type>GMountOperation</type></link> that then can use 
if they require any privileges or authentication for their volumes 
to be mounted (e.g. a hard disk partition or an encrypted filesystem), 
or if they are implementing a remote server protocol which requires 
user credentials such as FTP or WebDAV.
</para>
<para>
Users should instantiate a subclass of this that implements all
the various callbacks to show the required dialogs.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GAskPasswordFlags" role="enum"/>enum GAskPasswordFlags</title>
<indexterm><primary>GAskPasswordFlags</primary></indexterm><programlisting>typedef enum {
  G_ASK_PASSWORD_NEED_PASSWORD       = 1&lt;&lt;0,
  G_ASK_PASSWORD_NEED_USERNAME       = 1&lt;&lt;1,
  G_ASK_PASSWORD_NEED_DOMAIN         = 1&lt;&lt;2,
  G_ASK_PASSWORD_SAVING_SUPPORTED    = 1&lt;&lt;3,
  G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = 1&lt;&lt;4
} GAskPasswordFlags;
</programlisting>
<para>
<link linkend="GAskPasswordFlags"><type>GAskPasswordFlags</type></link> are used to request specific information from the 
user, or to notify the user of their choices in an authentication
situation.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><anchor id="G-ASK-PASSWORD-NEED-PASSWORD:CAPS" role="constant"/><literal>G_ASK_PASSWORD_NEED_PASSWORD</literal></term>
<listitem><simpara> operation requires a password.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-ASK-PASSWORD-NEED-USERNAME:CAPS" role="constant"/><literal>G_ASK_PASSWORD_NEED_USERNAME</literal></term>
<listitem><simpara> operation requires a username.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-ASK-PASSWORD-NEED-DOMAIN:CAPS" role="constant"/><literal>G_ASK_PASSWORD_NEED_DOMAIN</literal></term>
<listitem><simpara> operation requires a domain.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-ASK-PASSWORD-SAVING-SUPPORTED:CAPS" role="constant"/><literal>G_ASK_PASSWORD_SAVING_SUPPORTED</literal></term>
<listitem><simpara> operation supports saving settings.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-ASK-PASSWORD-ANONYMOUS-SUPPORTED:CAPS" role="constant"/><literal>G_ASK_PASSWORD_ANONYMOUS_SUPPORTED</literal></term>
<listitem><simpara> operation supports anonymous users.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GPasswordSave" role="enum"/>enum GPasswordSave</title>
<indexterm><primary>GPasswordSave</primary></indexterm><programlisting>typedef enum {
  G_PASSWORD_SAVE_NEVER,
  G_PASSWORD_SAVE_FOR_SESSION,
  G_PASSWORD_SAVE_PERMANENTLY
} GPasswordSave;
</programlisting>
<para>
<link linkend="GPasswordSave"><type>GPasswordSave</type></link> is used to indicate the lifespan of a saved password.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><anchor id="G-PASSWORD-SAVE-NEVER:CAPS" role="constant"/><literal>G_PASSWORD_SAVE_NEVER</literal></term>
<listitem><simpara> never save a password.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-PASSWORD-SAVE-FOR-SESSION:CAPS" role="constant"/><literal>G_PASSWORD_SAVE_FOR_SESSION</literal></term>
<listitem><simpara> save a password for the session.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-PASSWORD-SAVE-PERMANENTLY:CAPS" role="constant"/><literal>G_PASSWORD_SAVE_PERMANENTLY</literal></term>
<listitem><simpara> save a password permanently.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="GMountOperation-struct" role="struct"/>GMountOperation</title>
<indexterm><primary>GMountOperation</primary></indexterm><programlisting>typedef struct _GMountOperation GMountOperation;</programlisting>
<para>
Class for providing authentication methods for mounting operations, 
such as mounting a file locally, or authenticating with a server.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GMountOperationResult" role="enum"/>enum GMountOperationResult</title>
<indexterm><primary>GMountOperationResult</primary></indexterm><programlisting>typedef enum {
  G_MOUNT_OPERATION_HANDLED,
  G_MOUNT_OPERATION_ABORTED,
  G_MOUNT_OPERATION_UNHANDLED
} GMountOperationResult;
</programlisting>
<para>
<link linkend="GMountOperationResult"><type>GMountOperationResult</type></link> is returned as a result when a request for information
is send by the mounting operation.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><anchor id="G-MOUNT-OPERATION-HANDLED:CAPS" role="constant"/><literal>G_MOUNT_OPERATION_HANDLED</literal></term>
<listitem><simpara> The request was fulfilled and the user specified data is now availible
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-MOUNT-OPERATION-ABORTED:CAPS" role="constant"/><literal>G_MOUNT_OPERATION_ABORTED</literal></term>
<listitem><simpara> The user requested the mount operation to be aborted
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="G-MOUNT-OPERATION-UNHANDLED:CAPS" role="constant"/><literal>G_MOUNT_OPERATION_UNHANDLED</literal></term>
<listitem><simpara> The request was unhandled (i.e. not implemented)
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-new" role="function"/>g_mount_operation_new ()</title>
<indexterm><primary>g_mount_operation_new</primary></indexterm><programlisting><link linkend="GMountOperation">GMountOperation</link>*    g_mount_operation_new               (void);</programlisting>
<para>
Creates a new mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-get-username" role="function"/>g_mount_operation_get_username ()</title>
<indexterm><primary>g_mount_operation_get_username</primary></indexterm><programlisting>const <link linkend="char">char</link>*         g_mount_operation_get_username      (<link linkend="GMountOperation">GMountOperation</link> *op);</programlisting>
<para>
Get the user name from the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a string containing the user name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-set-username" role="function"/>g_mount_operation_set_username ()</title>
<indexterm><primary>g_mount_operation_set_username</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_set_username      (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         const <link linkend="char">char</link> *username);</programlisting>
<para>
Sets the user name within <parameter>op</parameter> to <parameter>username</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>username</parameter>&nbsp;:</term>
<listitem><simpara> input username.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-get-password" role="function"/>g_mount_operation_get_password ()</title>
<indexterm><primary>g_mount_operation_get_password</primary></indexterm><programlisting>const <link linkend="char">char</link>*         g_mount_operation_get_password      (<link linkend="GMountOperation">GMountOperation</link> *op);</programlisting>
<para>
Gets a password from the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a string containing the password within <parameter>op</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-set-password" role="function"/>g_mount_operation_set_password ()</title>
<indexterm><primary>g_mount_operation_set_password</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_set_password      (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         const <link linkend="char">char</link> *password);</programlisting>
<para>
Sets the mount operation's password to <parameter>password</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> password to set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-get-anonymous" role="function"/>g_mount_operation_get_anonymous ()</title>
<indexterm><primary>g_mount_operation_get_anonymous</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            g_mount_operation_get_anonymous     (<link linkend="GMountOperation">GMountOperation</link> *op);</programlisting>
<para>
Check to see whether the mount operation is being used 
for an anonymous user.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if mount operation is anonymous. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-set-anonymous" role="function"/>g_mount_operation_set_anonymous ()</title>
<indexterm><primary>g_mount_operation_set_anonymous</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_set_anonymous     (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="gboolean">gboolean</link> anonymous);</programlisting>
<para>
Sets the mount operation to use an anonymous user if <parameter>anonymous</parameter> is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>anonymous</parameter>&nbsp;:</term>
<listitem><simpara> boolean value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-get-domain" role="function"/>g_mount_operation_get_domain ()</title>
<indexterm><primary>g_mount_operation_get_domain</primary></indexterm><programlisting>const <link linkend="char">char</link>*         g_mount_operation_get_domain        (<link linkend="GMountOperation">GMountOperation</link> *op);</programlisting>
<para>
Gets the domain of the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a string set to the domain. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-set-domain" role="function"/>g_mount_operation_set_domain ()</title>
<indexterm><primary>g_mount_operation_set_domain</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_set_domain        (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         const <link linkend="char">char</link> *domain);</programlisting>
<para>
Sets the mount operation's domain.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>domain</parameter>&nbsp;:</term>
<listitem><simpara> the domain to set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-get-password-save" role="function"/>g_mount_operation_get_password_save ()</title>
<indexterm><primary>g_mount_operation_get_password_save</primary></indexterm><programlisting><link linkend="GPasswordSave">GPasswordSave</link>       g_mount_operation_get_password_save (<link linkend="GMountOperation">GMountOperation</link> *op);</programlisting>
<para>
Gets the state of saving passwords for the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GPasswordSave"><type>GPasswordSave</type></link> flag. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-set-password-save" role="function"/>g_mount_operation_set_password_save ()</title>
<indexterm><primary>g_mount_operation_set_password_save</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_set_password_save (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="GPasswordSave">GPasswordSave</link> save);</programlisting>
<para>
Sets the state of saving passwords for the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>save</parameter>&nbsp;:</term>
<listitem><simpara> a set of <link linkend="GPasswordSave"><type>GPasswordSave</type></link> flags.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-get-choice" role="function"/>g_mount_operation_get_choice ()</title>
<indexterm><primary>g_mount_operation_get_choice</primary></indexterm><programlisting><link linkend="int">int</link>                 g_mount_operation_get_choice        (<link linkend="GMountOperation">GMountOperation</link> *op);</programlisting>
<para>
Gets a choice from the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> an integer containing an index of the user's choice from 
the choice's list, or <link linkend="0:CAPS"><literal>0</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-set-choice" role="function"/>g_mount_operation_set_choice ()</title>
<indexterm><primary>g_mount_operation_set_choice</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_set_choice        (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="int">int</link> choice);</programlisting>
<para>
Sets a default choice for the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>choice</parameter>&nbsp;:</term>
<listitem><simpara> an integer.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-mount-operation-reply" role="function"/>g_mount_operation_reply ()</title>
<indexterm><primary>g_mount_operation_reply</primary></indexterm><programlisting><link linkend="void">void</link>                g_mount_operation_reply             (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                         <link linkend="GMountOperationResult">GMountOperationResult</link> result);</programlisting>
<para>
Emits the <link linkend="GMountOperation-reply"><type>"reply"</type></link> signal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>result</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperationResult"><type>GMountOperationResult</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GMountOperation--anonymous"/>The <literal>&quot;anonymous&quot;</literal> property</title>
<indexterm><primary>GMountOperation:anonymous</primary></indexterm><programlisting>  &quot;anonymous&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>
Whether to use an anonymous user when authenticating.</para>
<para>

</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GMountOperation--choice"/>The <literal>&quot;choice&quot;</literal> property</title>
<indexterm><primary>GMountOperation:choice</primary></indexterm><programlisting>  &quot;choice&quot;                   <link linkend="gint">gint</link>                  : Read / Write</programlisting>
<para>
The index of the user's choice when a question is asked during the 
mount operation. See the <link linkend="GMountOperation-ask-question"><type>"ask-question"</type></link> signal.</para>
<para>

</para><para>Allowed values: &gt;= 0</para>
<para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GMountOperation--domain"/>The <literal>&quot;domain&quot;</literal> property</title>
<indexterm><primary>GMountOperation:domain</primary></indexterm><programlisting>  &quot;domain&quot;                   <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>
The domain to use for the mount operation.</para>
<para>

</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GMountOperation--password"/>The <literal>&quot;password&quot;</literal> property</title>
<indexterm><primary>GMountOperation:password</primary></indexterm><programlisting>  &quot;password&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>
The password that is used for authentication when carrying out
the mount operation.</para>
<para>

</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="GMountOperation--password-save"/>The <literal>&quot;password-save&quot;</literal> property</title>
<indexterm><primary>GMountOperation:password-save</primary></indexterm><programlisting>  &quot;password-save&quot;            <link linkend="GPasswordSave">GPasswordSave</link>         : Read / Write</programlisting>
<para>
Determines if and how the password information should be saved.</para>
<para>

</para><para>Default value: G_PASSWORD_SAVE_NEVER</para>
</refsect2>
<refsect2><title><anchor id="GMountOperation--username"/>The <literal>&quot;username&quot;</literal> property</title>
<indexterm><primary>GMountOperation:username</primary></indexterm><programlisting>  &quot;username&quot;                 <link linkend="gchararray">gchararray</link>            : Read / Write</programlisting>
<para>
The user name that is used for authentication when carrying out
the mount operation.</para>
<para>

</para><para>Default value: NULL</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GMountOperation-ask-password"/>The <literal>&quot;ask-password&quot;</literal> signal</title>
<indexterm><primary>GMountOperation::ask-password</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GMountOperation">GMountOperation</link>  *op,
                                                        <link linkend="gchar">gchar</link>            *message,
                                                        <link linkend="gchar">gchar</link>            *default_user,
                                                        <link linkend="gchar">gchar</link>            *default_domain,
                                                        <link linkend="GAskPasswordFlags">GAskPasswordFlags</link> flags,
                                                        <link linkend="gpointer">gpointer</link>          user_data)           : Run Last</programlisting>
<para>
Emitted when a mount operation asks the user for a password.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link> requesting a password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> string containing a message to display to the user.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_user</parameter>&nbsp;:</term>
<listitem><simpara> string containing the default user name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_domain</parameter>&nbsp;:</term>
<listitem><simpara> string containing the default domain.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> a set of <link linkend="GAskPasswordFlags"><type>GAskPasswordFlags</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GMountOperation-ask-question"/>The <literal>&quot;ask-question&quot;</literal> signal</title>
<indexterm><primary>GMountOperation::ask-question</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GMountOperation">GMountOperation</link> *op,
                                                        <link linkend="gchar">gchar</link>           *message,
                                                        <link linkend="GStrv">GStrv</link>           *choices,
                                                        <link linkend="gpointer">gpointer</link>         user_data)      : Run Last</programlisting>
<para>
Emitted when asking the user a question and gives a list of 
choices for the user to choose from.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link> asking a question.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>message</parameter>&nbsp;:</term>
<listitem><simpara> string containing a message to display to the user.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>choices</parameter>&nbsp;:</term>
<listitem><simpara> an array of strings for each possible choice.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GMountOperation-reply"/>The <literal>&quot;reply&quot;</literal> signal</title>
<indexterm><primary>GMountOperation::reply</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GMountOperation">GMountOperation</link>      *op,
                                                        <link linkend="GMountOperationResult">GMountOperationResult</link> abort,
                                                        <link linkend="gpointer">gpointer</link>              user_data)      : Run Last</programlisting>
<para>
Emitted when the user has replied to the mount operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>op</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GMountOperation"><type>GMountOperation</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>abort</parameter>&nbsp;:</term>
<listitem><simpara> a boolean indicating <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation was aborted.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>




<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
