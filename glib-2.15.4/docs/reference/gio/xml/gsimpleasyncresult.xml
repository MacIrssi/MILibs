<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GSimpleAsyncResult">
<refmeta>
<refentrytitle role="top_of_page">GSimpleAsyncResult</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GIO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GSimpleAsyncResult</refname>
<refpurpose>Simple asynchronous results implementation</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gio.h&gt;


                    <link linkend="GSimpleAsyncResult-struct">GSimpleAsyncResult</link>;
<link linkend="void">void</link>                (<link linkend="GSimpleAsyncThreadFunc">*GSimpleAsyncThreadFunc</link>)           (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *res,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable);
<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link>* <link linkend="g-simple-async-result-new">g_simple_async_result_new</link>           (<link linkend="GObject">GObject</link> *source_object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="gpointer">gpointer</link> source_tag);
<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link>* <link linkend="g-simple-async-result-new-error">g_simple_async_result_new_error</link>     (<link linkend="GObject">GObject</link> *source_object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link>* <link linkend="g-simple-async-result-new-from-error">g_simple_async_result_new_from_error</link>
                                                        (<link linkend="GObject">GObject</link> *source_object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GError">GError</link> *error);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-op-res-gpointer">g_simple_async_result_set_op_res_gpointer</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gpointer">gpointer</link> op_res,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_op_res);
<link linkend="gpointer">gpointer</link>            <link linkend="g-simple-async-result-get-op-res-gpointer">g_simple_async_result_get_op_res_gpointer</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-op-res-gssize">g_simple_async_result_set_op_res_gssize</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gssize">gssize</link> op_res);
<link linkend="gssize">gssize</link>              <link linkend="g-simple-async-result-get-op-res-gssize">g_simple_async_result_get_op_res_gssize</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-op-res-gboolean">g_simple_async_result_set_op_res_gboolean</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gboolean">gboolean</link> op_res);
<link linkend="gboolean">gboolean</link>            <link linkend="g-simple-async-result-get-op-res-gboolean">g_simple_async_result_get_op_res_gboolean</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);
<link linkend="gpointer">gpointer</link>            <link linkend="g-simple-async-result-get-source-tag">g_simple_async_result_get_source_tag</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-handle-cancellation">g_simple_async_result_set_handle_cancellation</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gboolean">gboolean</link> handle_cancellation);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-complete">g_simple_async_result_complete</link>      (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-complete-in-idle">g_simple_async_result_complete_in_idle</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-run-in-thread">g_simple_async_result_run_in_thread</link> (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GSimpleAsyncThreadFunc">GSimpleAsyncThreadFunc</link> func,
                                                         <link linkend="int">int</link> io_priority,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-from-error">g_simple_async_result_set_from_error</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GError">GError</link> *error);
<link linkend="gboolean">gboolean</link>            <link linkend="g-simple-async-result-propagate-error">g_simple_async_result_propagate_error</link>
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GError">GError</link> **dest);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-error">g_simple_async_result_set_error</link>     (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="void">void</link>                <link linkend="g-simple-async-result-set-error-va">g_simple_async_result_set_error_va</link>  (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         <link linkend="va-list">va_list</link> args);
<link linkend="void">void</link>                <link linkend="g-simple-async-report-error-in-idle">g_simple_async_report_error_in_idle</link> (<link linkend="GObject">GObject</link> *object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="void">void</link>                <link linkend="g-simple-async-report-gerror-in-idle">g_simple_async_report_gerror_in_idle</link>
                                                        (<link linkend="GObject">GObject</link> *object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GError">GError</link> *error);


</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----GSimpleAsyncResult
</synopsis>

</refsect1>



<refsect1 role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
GSimpleAsyncResult implements
 <link linkend="GAsyncResult">GAsyncResult</link>.</para>

</refsect1>





<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
Implements <link linkend="GAsyncResult"><type>GAsyncResult</type></link> for simple cases. Most of the time, this 
will be all an application needs, and will be used transparently. 
Because of this, <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link> is used throughout GIO for 
handling asynchronous functions. 
</para>
<para>
GSimpleAsyncResult handles <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link><!-- -->s, error 
reporting, operation cancellation and the final state of an operation, 
completely transparent to the application. Results can be returned 
as a pointer e.g. for functions that return data that is collected 
asynchronously, a boolean value for checking the success or failure 
of an operation, or a <link linkend="gssize"><type>gssize</type></link> for operations which return the number 
of bytes modified by the operation; all of the simple return cases 
are covered.
</para>
<para>
Most of the time, an application will not need to know of the details 
of this API; it is handled transparently, and any necessary operations 
are handled by <link linkend="GAsyncResult"><type>GAsyncResult</type></link>'s interface. However, if implementing a 
new GIO module, for writing language bindings, or for complex 
applications that need better control of how asynchronous operations 
are completed, it is important to understand this functionality.
</para>
<para>
GSimpleAsyncResults are tagged with the calling function to ensure 
that asynchronous functions and their finishing functions are used 
together correctly.
</para>
<para>
To create a new <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>, call <link linkend="g-simple-async-result-new"><function>g_simple_async_result_new()</function></link>. 
If the result needs to be created for a <link linkend="GError"><type>GError</type></link>, use 
<link linkend="g-simple-async-result-new-from-error"><function>g_simple_async_result_new_from_error()</function></link>. If a <link linkend="GError"><type>GError</type></link> is not available 
(e.g. the asynchronous operation's doesn't take a <link linkend="GError"><type>GError</type></link> argument), 
but the result still needs to be created for an error condition, use
<link linkend="g-simple-async-result-new-error"><function>g_simple_async_result_new_error()</function></link> (or <link linkend="g-simple-async-result-set-error-va"><function>g_simple_async_result_set_error_va()</function></link>
if your application or binding requires passing a variable argument list 
directly), and the error can then be propegated through the use of 
<link linkend="g-simple-async-result-propagate-error"><function>g_simple_async_result_propagate_error()</function></link>.
</para>
<para>
An asynchronous operation can be made to ignore a cancellation event by 
calling <link linkend="g-simple-async-result-set-handle-cancellation"><function>g_simple_async_result_set_handle_cancellation()</function></link> with a 
<link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link> for the operation and <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>. 
</para>
<para>
GSimpleAsyncResult can integrate into GLib's event loop, <link linkend="GMainLoop"><type>GMainLoop</type></link>, 
or it can use <link linkend="GThread"><type>GThread</type></link><!-- -->s if available. 
<link linkend="g-simple-async-result-complete"><function>g_simple_async_result_complete()</function></link> will finish an I/O task directly within 
the main event loop. <link linkend="g-simple-async-result-complete-in-idle"><function>g_simple_async_result_complete_in_idle()</function></link> will 
integrate the I/O task into the main event loop as an idle function and 
<link linkend="g-simple-async-result-run-in-thread"><function>g_simple_async_result_run_in_thread()</function></link> will run the job in a separate 
thread.
</para>
<para>
To set the results of an asynchronous function, 
<link linkend="g-simple-async-result-set-op-res-gpointer"><function>g_simple_async_result_set_op_res_gpointer()</function></link>, 
<link linkend="g-simple-async-result-set-op-res-gboolean"><function>g_simple_async_result_set_op_res_gboolean()</function></link>, and 
<link linkend="g-simple-async-result-set-op-res-gssize"><function>g_simple_async_result_set_op_res_gssize()</function></link>
are provided, setting the operation's result to a gpointer, gboolean, or 
gssize, respectively.
</para>
<para>
Likewise, to get the result of an asynchronous function, 
<link linkend="g-simple-async-result-get-op-res-gpointer"><function>g_simple_async_result_get_op_res_gpointer()</function></link>,
<link linkend="g-simple-async-result-get-op-res-gboolean"><function>g_simple_async_result_get_op_res_gboolean()</function></link>, and 
<link linkend="g-simple-async-result-get-op-res-gssize"><function>g_simple_async_result_get_op_res_gssize()</function></link> are 
provided, getting the operation's result as a gpointer, gboolean, and 
gssize, respectively.</para>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GSimpleAsyncResult-struct" role="struct"/>GSimpleAsyncResult</title>
<indexterm><primary>GSimpleAsyncResult</primary></indexterm><programlisting>typedef struct _GSimpleAsyncResult GSimpleAsyncResult;</programlisting>
<para>
A simple implementation of <link linkend="GAsyncResult"><type>GAsyncResult</type></link>.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GSimpleAsyncThreadFunc" role="function"/>GSimpleAsyncThreadFunc ()</title>
<indexterm><primary>GSimpleAsyncThreadFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*GSimpleAsyncThreadFunc)           (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *res,
                                                         <link linkend="GObject">GObject</link> *object,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable);</programlisting>
<para>
Simple thread function that runs an asynchronous operation and 
checks for cancellation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>res</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara> optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-new" role="function"/>g_simple_async_result_new ()</title>
<indexterm><primary>g_simple_async_result_new</primary></indexterm><programlisting><link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link>* g_simple_async_result_new           (<link linkend="GObject">GObject</link> *source_object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="gpointer">gpointer</link> source_tag);</programlisting>
<para>
Creates a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source_object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link> the asynchronous function was called with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>source_tag</parameter>&nbsp;:</term>
<listitem><simpara> the asynchronous function.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-new-error" role="function"/>g_simple_async_result_new_error ()</title>
<indexterm><primary>g_simple_async_result_new_error</primary></indexterm><programlisting><link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link>* g_simple_async_result_new_error     (<link linkend="GObject">GObject</link> *source_object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Creates a new <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link> with a set error.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source_object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>domain</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GQuark"><type>GQuark</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>code</parameter>&nbsp;:</term>
<listitem><simpara> an error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> a string with format characters.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> a list of values to insert into <parameter>format</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-new-from-error" role="function"/>g_simple_async_result_new_from_error ()</title>
<indexterm><primary>g_simple_async_result_new_from_error</primary></indexterm><programlisting><link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link>* g_simple_async_result_new_from_error
                                                        (<link linkend="GObject">GObject</link> *source_object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GError">GError</link> *error);</programlisting>
<para>
Creates a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link> from an error condition.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source_object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GError"><type>GError</type></link> location.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-op-res-gpointer" role="function"/>g_simple_async_result_set_op_res_gpointer ()</title>
<indexterm><primary>g_simple_async_result_set_op_res_gpointer</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_op_res_gpointer
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gpointer">gpointer</link> op_res,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> destroy_op_res);</programlisting>
<para>
Sets the operation result within the asynchronous result to a pointer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>op_res</parameter>&nbsp;:</term>
<listitem><simpara> a pointer result from an asynchronous function.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>destroy_op_res</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GDestroyNotify"><type>GDestroyNotify</type></link> function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-get-op-res-gpointer" role="function"/>g_simple_async_result_get_op_res_gpointer ()</title>
<indexterm><primary>g_simple_async_result_get_op_res_gpointer</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            g_simple_async_result_get_op_res_gpointer
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);</programlisting>
<para>
Gets a pointer result as returned by the asynchronous function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a pointer from the result.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-op-res-gssize" role="function"/>g_simple_async_result_set_op_res_gssize ()</title>
<indexterm><primary>g_simple_async_result_set_op_res_gssize</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_op_res_gssize
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gssize">gssize</link> op_res);</programlisting>
<para>
Sets the operation result within the asynchronous result to 
the given <parameter>op_res</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>op_res</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gssize"><type>gssize</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-get-op-res-gssize" role="function"/>g_simple_async_result_get_op_res_gssize ()</title>
<indexterm><primary>g_simple_async_result_get_op_res_gssize</primary></indexterm><programlisting><link linkend="gssize">gssize</link>              g_simple_async_result_get_op_res_gssize
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);</programlisting>
<para>
Gets a gssize from the asynchronous result.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a gssize returned from the asynchronous function.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-op-res-gboolean" role="function"/>g_simple_async_result_set_op_res_gboolean ()</title>
<indexterm><primary>g_simple_async_result_set_op_res_gboolean</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_op_res_gboolean
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gboolean">gboolean</link> op_res);</programlisting>
<para>
Sets the operation result to a boolean within the asynchronous result.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>op_res</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gboolean"><type>gboolean</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-get-op-res-gboolean" role="function"/>g_simple_async_result_get_op_res_gboolean ()</title>
<indexterm><primary>g_simple_async_result_get_op_res_gboolean</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            g_simple_async_result_get_op_res_gboolean
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);</programlisting>
<para>
Gets the operation result boolean from within the asynchronous result.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the operation's result was <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> 
    if the operation's result was <link linkend="FALSE:CAPS"><literal>FALSE</literal></link>. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-get-source-tag" role="function"/>g_simple_async_result_get_source_tag ()</title>
<indexterm><primary>g_simple_async_result_get_source_tag</primary></indexterm><programlisting><link linkend="gpointer">gpointer</link>            g_simple_async_result_get_source_tag
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);</programlisting>
<para>
Gets the source tag for the <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="gpointer"><type>gpointer</type></link> to the source object for the <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-handle-cancellation" role="function"/>g_simple_async_result_set_handle_cancellation ()</title>
<indexterm><primary>g_simple_async_result_set_handle_cancellation</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_handle_cancellation
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="gboolean">gboolean</link> handle_cancellation);</programlisting>
<para>
Sets whether to handle cancellation within the asynchronous operation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handle_cancellation</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="gboolean"><type>gboolean</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-complete" role="function"/>g_simple_async_result_complete ()</title>
<indexterm><primary>g_simple_async_result_complete</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_complete      (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);</programlisting>
<para>
Completes an asynchronous I/O job.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-complete-in-idle" role="function"/>g_simple_async_result_complete_in_idle ()</title>
<indexterm><primary>g_simple_async_result_complete_in_idle</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_complete_in_idle
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple);</programlisting>
<para>
Completes an asynchronous function in the main event loop using 
an idle function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-run-in-thread" role="function"/>g_simple_async_result_run_in_thread ()</title>
<indexterm><primary>g_simple_async_result_run_in_thread</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_run_in_thread (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GSimpleAsyncThreadFunc">GSimpleAsyncThreadFunc</link> func,
                                                         <link linkend="int">int</link> io_priority,
                                                         <link linkend="GCancellable">GCancellable</link> *cancellable);</programlisting>
<para>
Runs the asynchronous job in a separated thread.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncThreadFunc"><type>GSimpleAsyncThreadFunc</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>io_priority</parameter>&nbsp;:</term>
<listitem><simpara> the io priority of the request.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cancellable</parameter>&nbsp;:</term>
<listitem><simpara> optional <link linkend="GCancellable"><type>GCancellable</type></link> object, <link linkend="NULL:CAPS"><literal>NULL</literal></link> to ignore. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-from-error" role="function"/>g_simple_async_result_set_from_error ()</title>
<indexterm><primary>g_simple_async_result_set_from_error</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_from_error
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GError">GError</link> *error);</programlisting>
<para>
Sets the result from a <link linkend="GError"><type>GError</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="GError"><type>GError</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-propagate-error" role="function"/>g_simple_async_result_propagate_error ()</title>
<indexterm><primary>g_simple_async_result_propagate_error</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            g_simple_async_result_propagate_error
                                                        (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GError">GError</link> **dest);</programlisting>
<para>
Propagates an error from within the simple asynchronous result to
a given destination.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dest</parameter>&nbsp;:</term>
<listitem><simpara> a location to propegate the error to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the error was propegated to <parameter>dest</parameter>. <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-error" role="function"/>g_simple_async_result_set_error ()</title>
<indexterm><primary>g_simple_async_result_set_error</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_error     (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Sets an error within the asynchronous result without a <link linkend="GError"><type>GError</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>domain</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GQuark"><type>GQuark</type></link> (usually <link linkend="G-IO-ERROR:CAPS"><type>G_IO_ERROR</type></link>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>code</parameter>&nbsp;:</term>
<listitem><simpara> an error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> a formatted error reporting string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> a list of variables to fill in <parameter>format</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-result-set-error-va" role="function"/>g_simple_async_result_set_error_va ()</title>
<indexterm><primary>g_simple_async_result_set_error_va</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_result_set_error_va  (<link linkend="GSimpleAsyncResult">GSimpleAsyncResult</link> *simple,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         <link linkend="va-list">va_list</link> args);</programlisting>
<para>
Sets an error within the asynchronous result without a <link linkend="GError"><type>GError</type></link>. 
Unless writing a binding, see <link linkend="g-simple-async-result-set-error"><function>g_simple_async_result_set_error()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>simple</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GSimpleAsyncResult"><type>GSimpleAsyncResult</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>domain</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GQuark"><type>GQuark</type></link> (usually <link linkend="G-IO-ERROR:CAPS"><type>G_IO_ERROR</type></link>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>code</parameter>&nbsp;:</term>
<listitem><simpara> an error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> a formatted error reporting string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&nbsp;:</term>
<listitem><simpara> va_list of arguments. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-report-error-in-idle" role="function"/>g_simple_async_report_error_in_idle ()</title>
<indexterm><primary>g_simple_async_report_error_in_idle</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_report_error_in_idle (<link linkend="GObject">GObject</link> *object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GQuark">GQuark</link> domain,
                                                         <link linkend="gint">gint</link> code,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Reports an error in an asynchronous function in an idle function by 
directly setting the contents of the <link linkend="GAsyncResult"><type>GAsyncResult</type></link> with the given error
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>domain</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GQuark"><type>GQuark</type></link> containing the error domain (usually <link linkend="G-IO-ERROR:CAPS"><type>G_IO_ERROR</type></link>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>code</parameter>&nbsp;:</term>
<listitem><simpara> a specific error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> a formatted error reporting string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> a list of variables to fill in <parameter>format</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="g-simple-async-report-gerror-in-idle" role="function"/>g_simple_async_report_gerror_in_idle ()</title>
<indexterm><primary>g_simple_async_report_gerror_in_idle</primary></indexterm><programlisting><link linkend="void">void</link>                g_simple_async_report_gerror_in_idle
                                                        (<link linkend="GObject">GObject</link> *object,
                                                         <link linkend="GAsyncReadyCallback">GAsyncReadyCallback</link> callback,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GError">GError</link> *error);</programlisting>
<para>
Reports an error in an idle function. Similar to 
<link linkend="g-simple-async-report-error-in-idle"><function>g_simple_async_report_error_in_idle()</function></link>, but takes a <link linkend="GError"><type>GError</type></link> rather 
than building a new one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>object</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GObject"><type>GObject</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>callback</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GAsyncReadyCallback"><type>GAsyncReadyCallback</type></link>. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> user data passed to <parameter>callback</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GError"><type>GError</type></link> to report
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>



<refsect1>
<title>See Also</title>
<link linkend="GAsyncResult"><type>GAsyncResult</type></link>
</refsect1>


<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
